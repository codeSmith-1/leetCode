package Palindrome;

public class LargestPalindrome {

	public static void main(String[] args) {
		LargestPalindrome pd = new LargestPalindrome();
		String s1 = "tacocat";
		String s2 = "annaasdsdstacocat";
		String s3 = "waffle";

		System.out.println(pd.palindrome(s1));
		System.out.println(pd.palindrome(s2));
		System.out.println(pd.palindrome(s3));
		

	}

	// Function that takes in a string and outputs the longest contiguous palidrome
	// "annalimousineenisuomilanna"
	// "anna" > potential palindrome
	// null check, same check, size 1 check

	// annatacocatanna

	// break statement is
	// compare a result string that is being built to result.subString(0,
	// result.length()/2);
	public String palindrome(String str) {
		if (str == null || str.length() == 1)
			return str;

		String builder = "";
		String palindrome = "";

		for (int i = 0; i < str.length(); i++) {
			builder += str.charAt(i);
			if (isPalindrome(builder) && builder.length() > palindrome.length()) {
				System.out.println(builder);
				palindrome = builder;
				builder= "";
			} else {
				continue;
			}
		}
		return palindrome;
	}

	public boolean isPalindrome(String str) {
		StringBuffer buf = new StringBuffer(str);
		return str.equals(buf.reverse().toString()) ? true : false;
	}
}
